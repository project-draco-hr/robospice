{
  for (  Persister persister : this.listPersister) {
    if (persister.canHandleClass(clazz)) {
      if (persister instanceof ObjectPersister) {
        return (ObjectPersister<T>)persister;
      }
      if (persister instanceof ObjectPersisterFactory) {
        ObjectPersisterFactory factory=(ObjectPersisterFactory)persister;
        if (factory.canHandleClass(clazz)) {
          List<ObjectPersister<?>> listPersisterForFactory=mapFactoryToPersister.get(factory);
          for (          ObjectPersister<?> objectPersister : listPersisterForFactory) {
            if (objectPersister.canHandleClass(clazz)) {
              return (ObjectPersister<T>)objectPersister;
            }
          }
          ObjectPersister<T> newPersister=factory.createObjectPersister(clazz);
          newPersister.setAsyncSaveEnabled(factory.isAsyncSaveEnabled());
          listPersisterForFactory.add(newPersister);
          return newPersister;
        }
      }
    }
  }
  throw new RuntimeException("Class " + clazz.getName() + " is not handled by any registered factoryList");
}
