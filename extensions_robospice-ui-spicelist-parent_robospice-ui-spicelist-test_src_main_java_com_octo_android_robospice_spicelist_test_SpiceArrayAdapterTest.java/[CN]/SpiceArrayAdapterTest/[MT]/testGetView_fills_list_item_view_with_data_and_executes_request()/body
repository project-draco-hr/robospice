{
  byte[] data=IOUtils.toByteArray(getInstrumentation().getContext().getResources().openRawResource(R.raw.binary));
  mockWebServer.enqueue(new MockResponse().setBody(data));
  mockWebServer.play();
  View view=adapter.getView(0,null,null);
  adapter.await(ADAPTER_UPDATE_TIME_OUT);
  assertTrue(adapter.isLoadBitmapHasBeenCalled());
  TextView nameView=(TextView)view.findViewById(R.id.user_name_textview);
  ImageView photoView=(ImageView)view.findViewById(R.id.thumbnail_imageview);
  assertNotNull("View is null. ",view);
  assertNotNull("Name TextView is null. ",nameView);
  assertNotNull("Photo ImageView is null. ",photoView);
  assertEquals("Names doesn't match.",data1.getFoo(),nameView.getText());
  assertEquals(1,mockWebServer.getRequestCount());
  RecordedRequest first=mockWebServer.takeRequest();
  assertEquals("GET /" + data1.getImageUrl() + " HTTP/1.1",first.getRequestLine());
  InputStream cacheInputStream=new FileInputStream(cacheFile);
  assertTrue(IOUtils.contentEquals(cacheInputStream,getInstrumentation().getContext().getResources().openRawResource(R.raw.binary)));
}
