{
  SpiceManagerUnderTest spiceManager2=new SpiceManagerUnderTest(SpiceTestService.class);
  spiceManager.start(getInstrumentation().getTargetContext());
  spiceManager2.start(getInstrumentation().getTargetContext());
  SpiceRequestStub<String> spiceRequestStub=new SpiceRequestSucceedingStub<String>(TEST_CLASS,TEST_RETURNED_DATA,WAIT_BEFORE_EXECUTING_REQUEST_SHORT);
  SpiceRequestStub<String> spiceRequestStub2=new SpiceRequestSucceedingStub<String>(TEST_CLASS,TEST_RETURNED_DATA,WAIT_BEFORE_EXECUTING_REQUEST_SHORT);
  RequestListenerStub<String> requestListenerStub=new RequestListenerStub<String>();
  RequestListenerStub<String> requestListenerStub2=new RequestListenerStub<String>();
  spiceManager.execute(spiceRequestStub,TEST_CACHE_KEY,DurationInMillis.ALWAYS_EXPIRED,requestListenerStub);
  spiceManager2.execute(spiceRequestStub2,TEST_CACHE_KEY,DurationInMillis.ALWAYS_EXPIRED,requestListenerStub2);
  spiceRequestStub.awaitForLoadDataFromNetworkIsCalled(REQUEST_COMPLETION_TIME_OUT);
  assertEquals(0,spiceManager.getRequestToLaunchCount());
  assertEquals(1,spiceManager.getPendingRequestCount());
  assertEquals(0,spiceManager2.getRequestToLaunchCount());
  assertEquals(1,spiceManager2.getPendingRequestCount());
  waitForSpiceManagerShutdown(spiceManager2);
}
